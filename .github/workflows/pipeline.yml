name: Pipeline [test -> build -> deploy]

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      additional_docker_tag:
        description: Additional docker tag that can be used to specify stable or testing tags
        required: false
        default: ''
        type: string
      push:
        description: Push docker image to registry flag
        required: true
        default: false
        type: boolean
env:
  _JAVA_OPTIONS: >-
    -Xmx1024m
    -XX:ParallelGCThreads=2
    -XX:ConcGCThreads=2
    -Djava.util.concurrent.ForkJoinPool.common.parallelism=2
    -Dorg.gradle.daemon=false

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # This will cancel all running build/test/release pipelines that are not on the main branch
  # If this pipeline is on the main branch, it will wait until existing runs complete
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  helm_lint:
    strategy:
      matrix:
        environments: ['dev', 'preprod', 'prod']
    name: helm lint
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/test_helm_lint.yml@v2 # WORKFLOW_VERSION
    secrets: inherit
    with:
      environment: ${{ matrix.environments }}
  kotlin_validate:
    name: Validate the kotlin
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/kotlin_validate.yml@v2 # WORKFLOW_VERSION
    secrets: inherit
  build:
    name: Build docker image from hmpps-github-actions
    if: github.ref == 'refs/heads/main'
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/docker_build.yml@v2 # WORKFLOW_VERSION
    needs:
      - kotlin_validate
    with:
      docker_registry: 'ghcr.io'
      registry_org: 'ministryofjustice'
      additional_docker_tag: ${{ inputs.additional_docker_tag }}
      push: ${{ inputs.push || true }}
      docker_multiplatform: false

  integration_playwright_tests:
    needs:
      - kotlin_validate
    runs-on: ubuntu-latest
    container:
      image: cimg/openjdk:21.0-browsers

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Ensure Docker Compose is available
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose-plugin      

      - name: Start required containers
        run: sudo docker-compose -f docker-compose.integration.yml up -d

      - name: Wait for services
        run: |
          echo "Waiting for auth service to respond at http://localhost:9090/auth/health..."
          for i in {1..10}; do
            if curl --fail --silent http://localhost:9090/auth/health; then
              echo "✅ Auth service is ready!"
              exit 0
            fi
            echo "Retry $i: Auth not ready yet. Waiting..."
            sleep 10
          done
          echo "❌ Auth service did not become ready in time."
          docker-compose -f docker-compose.integration.yml logs
          exit 1
      
      - name: Download WireMock
        run: curl -o wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.9.1/wiremock-standalone-3.9.1.jar

      - name: Start WireMock
        run: java -jar wiremock.jar --port 9999 &
        shell: bash

      - name: Start App
        run: java -Xmx1024m -jar build/libs/calculate-journey-variable-payments-*.jar &
        env:
          SPRING_PROFILES_ACTIVE: dev
          SERVER_SERVLET_SESSION_COOKIE_SECURE: false

      - name: Wait for App
        run: sleep 20

      - name: Run Playwright Integration Tests
        run: ./gradlew testPlaywrightIntegration

  deploy_dev:
    name: Deploy to the development environment
    needs:
      - build
      - helm_lint
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/deploy_env.yml@v2 # WORKFLOW_VERSION
    secrets: inherit
    with:
      environment: 'dev'
      app_version: '${{ needs.build.outputs.app_version }}'
  # deploy_preprod:
  #   name: Deploy to pre-production environment
  #   needs:
  #     - build
  #     - deploy_dev
  #   uses: ministryofjustice/hmpps-github-actions/.github/workflows/deploy_env.yml@v2 # WORKFLOW_VERSION
  #   secrets: inherit
  #   with:
  #     environment: 'preprod'
  #     app_version: '${{ needs.build.outputs.app_version }}'
  # deploy_prod:
  #   name: Deploy to production environment
  #   needs:
  #     - build
  #     - deploy_preprod
  #   uses: ministryofjustice/hmpps-github-actions/.github/workflows/deploy_env.yml@v2 # WORKFLOW_VERSION
  #   secrets: inherit
  #   with:
  #     environment: 'prod'
  #     app_version: '${{ needs.build.outputs.app_version }}'
