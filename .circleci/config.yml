version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.11
  browser-tools: circleci/browser-tools@1.1.3

jobs:
  validate:
    executor:
      name: hmpps/java
      tag: "17.0"
    environment:
      _JAVA_OPTIONS: -Xmx512m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false

    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew build
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle.kts

  integration_tests:
    docker:
      - image: cimg/openjdk:17.0-browsers
        environment:
          _JAVA_OPTIONS: -Xmx1024m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false
      - image: quay.io/hmpps/hmpps-auth:latest
        environment:
          - SERVER_PORT=9090
          - SPRING_PROFILES_ACTIVE=dev
      - image: postgres:10.16
        environment:
          POSTGRES_DB: jpc
          POSTGRES_USER: jpc
          POSTGRES_PASSWORD: letmein
        command: -p 5433
    resource_class: "xlarge"
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - browser-tools/install-browser-tools
      - run:
          name: Wait for auth
          command: dockerize -wait http://localhost:9090/auth/health -timeout 1m
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.2/wiremock-standalone-2.27.2.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9999
          background: true
      - run:
          name: Run the java app.
          command: java -Xmx1024m -jar ~/app/build/libs/calculate-journey-variable-payments-*.jar
          background: true
          environment:
            SPRING_PROFILES_ACTIVE: dev
            SERVER_SERVLET_SESSION_COOKIE_SECURE: false
      - run:
          name: Wait for java app to start
          command: sleep 20
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "build.gradle.kts" }}
      - run:
          name: Run Fluent Integration Tests
          command: ./gradlew -Dorg.gradle.jvmargs="--illegal-access=permit" -Dkotlin.daemon.jvm.options="--illegal-access=permit" testIntegration
      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - /home/circleci/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "build.gradle.kts" }}
          paths:
            - /home/circleci/.gradle/caches
      - store_artifacts:
          path: build/reports/tests/testIntegration
          destination: integration/fluent
      - store_test_results:
          path: build/test-results

  export_kube_vars:
    docker:
      - image: cimg/node:16.13.1-browsers
    parameters:
      env:
        type: string
      cluster:
        type: string
        default: "live-1"
    steps:
      - export_kube_vars:
          env: << parameters.env >>
          cluster: << parameters.cluster >>

commands:
  export_kube_vars:
    description: "Exports kube vars for the chosen environment and cluster."
    parameters:
      env:
        type: string
      cluster:
        type: string
        default: live-1
    steps:
      - run:
          name: Export kubernetes env vars
          command: |
            ENV_UPCASED=$(echo "<< parameters.env >>" | tr '[:lower:]' '[:upper:]')
            CLUSTER_SUFFIX=""
            HELM_SUFFIX=""
            [[ "<< parameters.cluster >>" = "live" ]] && CLUSTER_SUFFIX="_LIVE"
            [[ "<< parameters.cluster >>" = "live-1" ]] && HELM_SUFFIX="-live-1"

            CLUSTER_VAR="KUBE_ENV_API${CLUSTER_SUFFIX}"
            CACERT_VAR="KUBE_ENV_CACERT${CLUSTER_SUFFIX}"
            TOKEN_VAR="KUBE_ENV_TOKEN${CLUSTER_SUFFIX}"
            HELM_VALUES_FILE="values-<< parameters.env >>${HELM_SUFFIX}.yaml"

            echo "export KUBE_ENV_API=\"${!CLUSTER_VAR}\"" >> $BASH_ENV
            echo "export KUBE_ENV_CACERT=\"${!CACERT_VAR}\"" >> $BASH_ENV
            echo "export KUBE_ENV_TOKEN=\"${!TOKEN_VAR}\"" >> $BASH_ENV


workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - integration_tests:
          requires:
            - validate
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - export_kube_vars:
          name: export_dev_vars
          env: dev
          requires:
            - validate
            - build_docker
            - helm_lint
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          helm_additional_args: "--values=${HELM_VALUES_FILE}"
          context:
            - hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - export_dev_vars
      - export_kube_vars:
          name: export_dev_live_vars
          env: dev
          cluster: live
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_dev_live
          env: "dev"
          context:
            - hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - export_dev_live_vars
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev_live
      - export_kube_vars:
          name: export_preprod_vars
          env: preprod
          requires:
            - request-preprod-approval
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          helm_additional_args: "--values=${HELM_VALUES_FILE}"
          context:
            - hmpps-common-vars
            - calculate-journey-variable-payments-preprod
          requires:
            - export_preprod_vars
      - export_kube_vars:
          name: export_preprod_live_vars
          env: preprod
          cluster: live
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_preprod_live
          env: "preprod"
          context:
            - hmpps-common-vars
            - calculate-journey-variable-payments-preprod
          requires:
            - export_preprod_live_vars
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod_live
      - export_kube_vars:
          name: export_prod_vars
          env: prod
          requires:
            - request-prod-approval
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          helm_additional_args: "--values=${HELM_VALUES_FILE}"
          slack_notification: true
          slack_channel_name: pecs-digital
          context:
            - hmpps-common-vars
            - calculate-journey-variable-payments-prod
          requires:
            - export_prod_vars
      - export_kube_vars:
          name: export_prod_live_vars
          env: prod
          cluster: live
          requires:
            - deploy_prod
      - hmpps/deploy_env:
          name: deploy_prod_live
          env: "prod"
          context:
            - hmpps-common-vars
            - calculate-journey-variable-payments-prod
          requires:
            - export_prod_live_vars

  security:
    triggers:
      - schedule:
          cron: "4 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          slack_channel: pecs-dev
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: pecs-dev
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: pecs-dev
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "28 6 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: pecs-dev
          context:
            - veracode-credentials
            - hmpps-common-vars
