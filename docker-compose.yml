# To access SQL At command line - $ docker exec -it jpc-database psql -U jpc

version: '3.1'

services:
  calculate-journey-variable-payments:
    restart: on-failure:3
    image: quay.io/hmpps/calculate-journey-variable-payments:latest
    container_name: calculate-journey-variable-payments
    depends_on:
      - localstack
      - db
      - hmpps-book-secure-move-api
      - hmpps-auth
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    environment:
      - SERVER_PORT=8080
      - APP_DB_URL=jdbc:postgresql://localhost:5433/jpc?user=jpc&password=letmein
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - AWS_DEFAULT_REGION=eu-west-2
      - BASM_API_BASE_URL=http://localhost:9999
      - BASM_BUCKET_NAME=basm
      - CRON_AUTOMATIC_LOCATION_MAPPING=-
      - CRON_IMPORT_REPORTS=-
      - HMPPS_AUTH_BASE_URI=http://localhost:9090/auth
      - HMPPS_AUTH_CLIENT_ID=pecs-jpc-client
      - HMPPS_AUTH_CLIENT_SECRET=clientsecret
      - HMPPS_AUTH_REDIRECT_BASE_URI=http://localhost:8080
      - IMPORT_FILES_LOCATIONS=schedule_34_locations_sample.xlsx
      - IMPORT_FILES_PRICES_GEO=geoamey_sample.xlsx
      - IMPORT_FILES_PRICES_SERCO=serco_sample.xlsx
      - JPC_BUCKET_NAME=jpc
      - SENTRY_ENVIRONMENT=local
      - S3_ENDPOINT=http://localhost:4572
    network_mode: host

  # Pinning to specific DB version to be inline with RDS instances.
  db:
    image: postgres:10.16
    container_name: jpc-database
    restart: always
    ports:
      - "5433:5433"
    environment:
      POSTGRES_DB: jpc
      POSTGRES_USER: jpc
      POSTGRES_PASSWORD: letmein
    command: -p 5433
    network_mode: host

  localstack:
    image: localstack/localstack:0.11.5
    container_name: localstack
    ports:
      - "4567-4597:4567-4597"
    environment:
      - SERVICES=s3
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=eu-west-2
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - $PWD/localstack:/docker-entrypoint-initaws.d
    network_mode: host

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    container_name: hmpps-auth
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
    environment:
      - SERVER_PORT=9090
      - SPRING_PROFILES_ACTIVE=dev
    network_mode: host

  hmpps-book-secure-move-api:
    image: rodolpheche/wiremock:latest
    container_name: hmpps-book-secure-move-api
    ports:
      - "9999:8081"
    volumes:
      - $PWD/wiremock-docker:/home/wiremock
    command: --verbose --global-response-templating --port=8081
    network_mode: host
