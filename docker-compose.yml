version: '3.1'

services:
  # Pinning to specific DB version to be inline with RDS instances.
  db:
    image: postgres:12.11
    container_name: jpc-database
    restart: always
    ports:
      - "5433:5433"
    environment:
      POSTGRES_DB: jpc
      POSTGRES_USER: jpc
      POSTGRES_PASSWORD: letmein
    command: -p 5433

  localstack:
    image: localstack/localstack:1.2.0
    container_name: localstack
    ports:
      - "4567-4597:4567-4597"
    environment:
      - SERVICES=s3
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=eu-west-2
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - $PWD/localstack:/docker-entrypoint-initaws.d

  hmpps-auth:
    depends_on:
      - hmpps-external-users-api
    image: quay.io/hmpps/hmpps-auth:latest
    container_name: hmpps-auth
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
    environment:
      - SERVER_PORT=9090
      - SPRING_PROFILES_ACTIVE=dev

  hmpps-external-users-api:
    image: quay.io/hmpps/hmpps-external-users-api:latest
    container_name: hmpps-external-users-api
    ports:
      - "8089:8089"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089/health/ping"]
    environment:
      - SERVER_PORT=8089
      - SPRING_PROFILES_ACTIVE=dev,local-postgres
      - API_BASE_URL_OAUTH=http://hmpps-auth:9090/auth
      - SPRING_R2DBC_URL=r2dbc:postgresql://auth-db:5432/auth-db?sslmode=prefer
      - SPRING_FLYWAY_URL=jdbc:postgresql://auth-db:5432/auth-db?sslmode=prefer

  hmpps-book-secure-move-api:
    image: rodolpheche/wiremock:latest
    container_name: hmpps-book-secure-move-api
    ports:
      - "9999:8081"
    volumes:
      - $PWD/wiremock-docker:/home/wiremock
    command: --verbose --global-response-templating --port=8081
